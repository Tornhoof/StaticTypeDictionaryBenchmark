<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;
using System.Collections.Generic;
using StaticTypedDictionaryBenchmark;
using System.Buffers;

// Autogenerated
// ReSharper disable BuiltInTypeReferenceStyle
namespace StaticTypedDictionaryBenchmark
{
<# for(int i = 1;i<=1000;i++) {
	string name = "Request"+i;
#>
public sealed class <#= name #> : IRequest
{
	public int Value => <#=i#>;
}
<# } #>

public static class SwitchHelper
{
	public static int Switch<T>(T t) where T : class
	{
	switch(t)
	{
<# for(int i = 1;i<=1000;i++) {
	string name = "Request"+i;
#>
	case <#= name #> r<#=i#>:
	{
		return r<#=i#>.Value;
	}
<# } #>
	}
	return 0;
	}
}

public static class StaticSwitchHelper
{
	static StaticSwitchHelper()
	{
	<# for(int i = 1;i<=1000;i++) {
	string name = "Request"+i;
#>
	_ = TypeIndex<IRequest>.Add<<#= name #>>(new <#= name #>());
<# } #>
	}

	public static int Switch<T>(T t) where T : class
	{
		var r = TypeIndex<IRequest>.Get<T>();
		return r?.Value ?? 0;
	}
}
}